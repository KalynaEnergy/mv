/{
    chosen {
		zephyr,console = &cdc_acm_uart0;
	};

    custompwms {
        compatible = "pwm-leds";
    
        custompwm0: custom_pwm_0 {
            pwms =  <&pwm0 0 PWM_MSEC(0) PWM_POLARITY_INVERTED>,  // period and flag values will be overwritten
                    <&pwm0 1 PWM_MSEC(0) PWM_POLARITY_NORMAL>,
                    <&pwm0 2 PWM_MSEC(0) PWM_POLARITY_NORMAL> 
                   ;
        };
    };
    aliases {
        mycustompwm = &custompwm0;
		die-temp0 = &temp;
    };

    zephyr,user {
		io-channels = <&adc 0>, <&adc 7>;
	};

};


&zephyr_udc0 {
	cdc_acm_uart0: cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
	};
};


&pwm0 {
    center-aligned;
};

&pinctrl {
    pwm0_default: pwm0_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 24)>,    // P0.24, red LED
				    <NRF_PSEL(PWM_OUT1, 0, 27)>,    // P0.27 = Arduino Nano D9, LS switch
                    <NRF_PSEL(PWM_OUT2, 0, 21)>;    // P0.21, Arduino Nano D8, HS switch
		};
	};
};

&adc {
	#address-cells = <1>;
	#size-cells = <0>;

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1_6";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>; // was ADC_ACQ_TIME_DEFAULT
		zephyr,input-positive = <NRF_SAADC_AIN1>; /* P0.03 */
		zephyr,resolution = <12>;
		zephyr,oversampling = <0>;
	};

	channel@7 {
		reg = <7>;
		zephyr,gain = "ADC_GAIN_1_6";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 3)>;
		zephyr,input-positive = <NRF_SAADC_VDD>;
		zephyr,resolution = <12>;
		zephyr,oversampling = <0>;

	};
};